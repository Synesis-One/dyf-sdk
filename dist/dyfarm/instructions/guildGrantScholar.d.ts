/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
/**
 * @category Instructions
 * @category GuildGrantScholar
 * @category generated
 */
export declare type GuildGrantScholarInstructionArgs = {
    guildTitle: string;
};
/**
 * @category Instructions
 * @category GuildGrantScholar
 * @category generated
 */
export declare const guildGrantScholarStruct: beet.FixableBeetArgsStruct<GuildGrantScholarInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _guildGrantScholar_ instruction
 *
 * @property [_writable_, **signer**] master
 * @property [] user
 * @property [_writable_] userProfile
 * @property [] guildAccount
 * @category Instructions
 * @category GuildGrantScholar
 * @category generated
 */
export declare type GuildGrantScholarInstructionAccounts = {
    master: web3.PublicKey;
    user: web3.PublicKey;
    userProfile: web3.PublicKey;
    guildAccount: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const guildGrantScholarInstructionDiscriminator: number[];
/**
 * Creates a _GuildGrantScholar_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category GuildGrantScholar
 * @category generated
 */
export declare function createGuildGrantScholarInstruction(accounts: GuildGrantScholarInstructionAccounts, args: GuildGrantScholarInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
