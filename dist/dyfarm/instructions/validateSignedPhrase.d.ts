/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
/**
 * @category Instructions
 * @category ValidateSignedPhrase
 * @category generated
 */
export declare type ValidateSignedPhraseInstructionArgs = {
    campaignTitle: string;
    offchainRef: string;
    confident: number;
    status: boolean;
    validate: string;
    rawProof: Uint8Array;
};
/**
 * @category Instructions
 * @category ValidateSignedPhrase
 * @category generated
 */
export declare const validateSignedPhraseStruct: beet.FixableBeetArgsStruct<ValidateSignedPhraseInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _validateSignedPhrase_ instruction
 *
 * @property [_writable_, **signer**] authority
 * @property [] user
 * @property [] builder
 * @property [_writable_] phraseAccount
 * @property [_writable_] userProfile
 * @property [_writable_] campaignActivity
 * @property [_writable_] builderProfile
 * @property [_writable_] builderActivity
 * @property [_writable_] logAccount
 * @property [_writable_] campaignAccount
 * @property [] farmConfig
 * @property [] ixSysvar
 * @property [] clock
 * @category Instructions
 * @category ValidateSignedPhrase
 * @category generated
 */
export declare type ValidateSignedPhraseInstructionAccounts = {
    authority: web3.PublicKey;
    user: web3.PublicKey;
    builder: web3.PublicKey;
    phraseAccount: web3.PublicKey;
    userProfile: web3.PublicKey;
    campaignActivity: web3.PublicKey;
    builderProfile: web3.PublicKey;
    builderActivity: web3.PublicKey;
    logAccount: web3.PublicKey;
    campaignAccount: web3.PublicKey;
    farmConfig: web3.PublicKey;
    ixSysvar: web3.PublicKey;
    systemProgram?: web3.PublicKey;
    clock: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const validateSignedPhraseInstructionDiscriminator: number[];
/**
 * Creates a _ValidateSignedPhrase_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category ValidateSignedPhrase
 * @category generated
 */
export declare function createValidateSignedPhraseInstruction(accounts: ValidateSignedPhraseInstructionAccounts, args: ValidateSignedPhraseInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
